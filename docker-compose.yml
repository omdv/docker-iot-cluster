# Need to run
# python -m grpc_tools.protoc -I. --python_out=pyserver/ --grpc_python_out=pyserver/ api.proto
# protoc --proto_path=. --go_out=plugins=grpc:kapacitor/ api.proto
# docker run -v (pwd):/defs namely/protoc-all:1.16_0 -f api.proto -l python
# docker run -v (pwd):/defs namely/protoc-all:1.16_0 -f api.proto -l go

version: '3'

services:
  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - 1883:1883
    volumes:
      - ./mosquitto:/mosquitto

  device:
    build: ./device
    volumes:
      - ./device:/app
    environment:
      - MQTT_TOPIC_PREFIX=iot
      - MQTT_KEEPALIVE_INTERVAL=45
      - MQTT_ACQ_FREQUENCY_SEC=10
    depends_on:
      - hub

  hub:
    build: ./hub
    volumes:
      - ./hub:/app
    environment:
      - MQTT_TOPIC_PREFIX=iot
      - MQTT_KEEPALIVE_INTERVAL=45
      - INFLUXDB_DB=iotdb
      - SCHEMA_MEASUREMENT=edge
    depends_on:
      - mosquitto

  nodered:
    image: nodered/node-red-docker:slim-v8
    ports:
      - 1880:1880
    volumes:
      - ./nodered:/data

  influxdb:
    image: influxdb:1.5.4-alpine
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=iotdb
      - INFLUXDB_DATA_ENGINE=tsm1
      - INFLUXDB_REPORTING_DISABLED=false
    volumes:
      - ./influxdb/data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    ports:
      - 3000:3000
    volumes:
      - ./grafana/storage:/var/lib/grafana

  chronograf:
    image: chronograf:alpine
    ports:
      - 8888:8888
    volumes:
      - ./chronograf:/var/lib/chronograf

  kapacitor:
    build: ./kapacitor
    volumes:
      - ./kapacitor/data:/var/lib/kapacitor
      - ./kapacitor/kapacitor.conf:/etc/kapacitor/kapacitor.conf:ro
    environment:
      - ANALYTICS_SERVICE=pyserver:50051
    ports:
      - 9092:9092
    depends_on:
      - influxdb
      - pyserver

  pyserver:
    build: ./pyserver
    environment:
      - PORT=50051
    ports:
      - 50051:50051